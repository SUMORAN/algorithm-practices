# -*- coding:utf-8 -*-
'''
《变态跳台阶》
题目描述:
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。
求该青蛙跳上一个n级的台阶总共有多少种跳法。
'''

'''
解题思路：
假设有n级台阶，如果第一次跳1阶，就还剩n-1阶；
              如果第一次跳2阶，就还剩n-2阶；
              如果第一次跳3阶，就还剩n-3阶；
              如果第一次跳4阶，就还剩n-4阶；
              ……
因此对于n阶来说，跳法f(n)=f(n-1)+f(n-2)+f(n-3)+f(n-4)+…+f(1)+1
n=0时 0 种跳法
n=1时 1 种跳法
n=2时 2 种跳法
n=3时 4 种跳法
n=4时 8 种跳法
n=5时 16 种跳法
n=6时 32 种跳法
n=n时 2^(n-1) 种跳法
'''
class Solution:
    def jumpFloorII(self, number):
        if number<=0:
            return 0
        else:
            return 2**(number-1)
